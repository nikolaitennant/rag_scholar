steps:
  # Build frontend
  - name: 'node:18'
    id: 'Build-Frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Install Doppler CLI
        apt-get update && apt-get install -y curl gnupg
        curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" | tee /etc/apt/sources.list.d/doppler-cli.list
        apt-get update && apt-get install -y doppler

        # Configure Doppler
        doppler configure set token $$DOPPLER_TOKEN
        doppler configure set project rag-scholar
        doppler configure set config prd

        cd frontend
        doppler run -- npm ci
        doppler run -- npm run build
    env:
      - 'NODE_ENV=production'
      - 'REACT_APP_API_URL=https://ragscholarai-${BUILD_ID}-ew.a.run.app'
    secretEnv: ['DOPPLER_TOKEN']

  # Build backend
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build-Backend'
    args:
      - 'build'
      - '-t'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '-t'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'
      - '.'
      - '-f'
      - 'Dockerfile'

  # Push backend images
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push-Backend'
    args:
      - 'push'
      - '--all-tags'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}'
    waitFor: ['Build-Backend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Deploy-Backend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--image=${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--memory=16Gi'
      - '--cpu=8'
      - '--timeout=600'
      - '--max-instances=3'
      - '--concurrency=80'
      - '--gpu=1'
      - '--gpu-type=nvidia-l4'
      - '--no-cpu-throttling'
      - '--set-secrets=DOPPLER_TOKEN=DOPPLER_TOKEN:latest'
      - '--set-env-vars=ENVIRONMENT=production,DEBUG=false,DOPPLER_PROJECT=rag-scholar,DOPPLER_CONFIG=prd'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=${COMMIT_SHA},gcb-build-id=${BUILD_ID}'
      - '--region=${_DEPLOY_REGION}'
      - '--quiet'
    waitFor: ['Push-Backend']

  # Deploy frontend to Firebase (using Doppler)
  - name: 'node:18'
    id: 'Deploy-Frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Install Doppler CLI
        apt-get update && apt-get install -y curl gnupg
        curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" | tee /etc/apt/sources.list.d/doppler-cli.list
        apt-get update && apt-get install -y doppler

        # Configure Doppler
        doppler configure set token $$DOPPLER_TOKEN
        doppler configure set project rag-scholar
        doppler configure set config prd

        cd frontend
        npm install -g firebase-tools
        doppler run -- firebase deploy --only hosting --project ${_FIREBASE_PROJECT_ID} --non-interactive --force
    secretEnv: ['DOPPLER_TOKEN']
    waitFor: ['Build-Frontend']

# Build images
images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'

# Options for optimization
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE
  # Enable faster builds
  machineType: E2_HIGHCPU_32
  diskSizeGb: 100

# Environment substitutions
substitutions:
  _AR_HOSTNAME: europe-west1-docker.pkg.dev
  _AR_PROJECT_ID: ragscholarai
  _AR_REPOSITORY: cloud-run-source-deploy
  _DEPLOY_REGION: europe-west1
  _PLATFORM: managed
  _SERVICE_NAME: ragscholarai
  _FIREBASE_PROJECT_ID: ragscholarai

# Available secrets (Firebase service account from Secret Manager)
availableSecrets:
  secretManager:
    - versionName: projects/ragscholarai/secrets/DOPPLER_TOKEN/versions/latest
      env: 'DOPPLER_TOKEN'

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - ragscholarai