steps:
  # Build backend
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build-Backend'
    args:
      - 'build'
      - '-t'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '-t'  
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'
      - '.'
      - '-f'
      - 'Dockerfile'

  # Build frontend
  - name: 'node:18'
    id: 'Build-Frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd frontend
        npm ci
        npm run build
    env:
      - 'NODE_ENV=production'

  # Push backend images
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push-Backend'
    args:
      - 'push'
      - '--all-tags'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}'
    waitFor: ['Build-Backend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Deploy-Backend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--image=${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--memory=1Gi'
      - '--timeout=600'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=${COMMIT_SHA},gcb-build-id=${BUILD_ID}'
      - '--region=${_DEPLOY_REGION}'
      - '--quiet'
    waitFor: ['Push-Backend']

  # Deploy frontend to Firebase (using service account)
  - name: 'node:18'
    id: 'Deploy-Frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd frontend
        npm install -g firebase-tools
        echo "$$FIREBASE_SERVICE_ACCOUNT" > /tmp/service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json
        firebase deploy --only hosting --project ${_FIREBASE_PROJECT_ID}
    secretEnv: ['FIREBASE_SERVICE_ACCOUNT']
    waitFor: ['Build-Frontend']

# Build images
images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'

# Options for optimization
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE
  # Enable faster builds
  machineType: E2_HIGHCPU_8
  diskSizeGb: 100

# Environment substitutions
substitutions:
  _AR_HOSTNAME: europe-west2-docker.pkg.dev
  _AR_PROJECT_ID: tough-canto-471207-p6
  _AR_REPOSITORY: cloud-run-source-deploy
  _DEPLOY_REGION: europe-west2
  _PLATFORM: managed
  _SERVICE_NAME: ragscholarai
  _FIREBASE_PROJECT_ID: ragscholarai

# Available secrets (Firebase service account from Secret Manager)
availableSecrets:
  secretManager:
    - versionName: projects/tough-canto-471207-p6/secrets/firebase-service-account/versions/latest
      env: 'FIREBASE_SERVICE_ACCOUNT'

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - ragscholarai