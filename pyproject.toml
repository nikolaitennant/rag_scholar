[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-scholar"
version = "2.0.0"
description = "Professional RAG-based research assistant for academic study"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Nikolai Tennant", email = "nikolaitennant@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "langchain>=0.3.0",
    "langchain-openai>=0.3.0",
    "langchain-core>=0.3.0",
    "langserve>=0.3.0",
    "langchain-community>=0.3.0",
    "langchain-google-firestore>=0.5.0",
    "openai>=1.12.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "sentence-transformers>=2.3.0",
    "rank-bm25>=0.2.2",
    "unstructured[all-docs]>=0.12.0",
    "pdfplumber>=0.10.0",
    "PyMuPDF>=1.23.0",
    "docx2txt>=0.8",
    "pytesseract>=0.3.10",
    "Pillow>=10.2.0",
    "httpx>=0.26.0",
    "python-multipart>=0.0.6",
    "structlog>=24.1.0",
    "humanize>=4.9.0",
    "google-cloud-storage>=2.10.0",
    "google-cloud-firestore>=2.15.0",
    "langchain-google-firestore>=0.2.0",
    "google-cloud-aiplatform>=1.60.0",
    "firebase-admin>=6.5.0",
    "cryptography>=42.0.0",
    "PyPDF2>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.12.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
]

[project.scripts]
rag-scholar-api = "rag_scholar.main:run"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501", "B008", "C901", "W191", "B904"]  # Added B904 to ignore exception chaining warnings

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-ra -q --cov=rag_scholar --cov-report=term-missing"

[tool.coverage.run]
source = ["src/rag_scholar"]
omit = ["*/tests/*", "*/test_*.py"]